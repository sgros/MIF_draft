



Internet Engineering Task Force                             S. Gros, Ed.
Internet-Draft                                             L. Jelenkovic
Intended status: Informational                                 D. Skvorc
Expires: May 26, 2016                               University of Zagreb
                                                       November 23, 2015


     Configuring hosts with multiple provisioning domains using NDP
               draft-sgros-dhcp-and-ipr-claim-analysis-00

Abstract

   The purpose of this draft is to present experiences gained while
   trying to implement support for PVDs in the Linux operating system.
   Two prototype implementations were done as a part of this endeavor,
   one from scratch and another as a part of existing component
   (NetworkManager).  The implementations themselves are described in a
   separate document while this one is about topics independent from
   particular system, i.e. more in line with the networking
   standardization.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at http://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on May 26, 2016.

Copyright Notice

   Copyright (c) 2015 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (http://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect



Gros, et al.              Expires May 26, 2016                  [Page 1]

Internet-Draft          Configuring PvD using NDP          November 2015


   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.

Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   2
     1.1.  Requirements Language . . . . . . . . . . . . . . . . . .   3
   2.  Options to configure hosts with PvDs  . . . . . . . . . . . .   3
     2.1.  Unsolicited RAs . . . . . . . . . . . . . . . . . . . . .   3
       2.1.1.  Sending all PvDs in every RA (A1) . . . . . . . . . .   4
       2.1.2.  Sending subset of PvDs in every RA (A2) . . . . . . .   4
       2.1.3.  Sending implicit PvD with a list of PvD IDs (A3)  . .   4
       2.1.4.  Sending only implicit PvD (A4)  . . . . . . . . . . .   4
     2.2.  Solicited RAs . . . . . . . . . . . . . . . . . . . . . .   4
       2.2.1.  RS without any change (B1)  . . . . . . . . . . . . .   5
       2.2.2.  RS with indication of PvD support (B2)  . . . . . . .   5
       2.2.3.  RS with request for specific PvDs (B3)  . . . . . . .   5
   3.  Implementation aspects  . . . . . . . . . . . . . . . . . . .   6
   4.  Sequence of steps to configure PvD on a host  . . . . . . . .   7
     4.1.  Implemented option  . . . . . . . . . . . . . . . . . . .   7
     4.2.  Optimal case  . . . . . . . . . . . . . . . . . . . . . .   7
   5.  PvD characteristics description . . . . . . . . . . . . . . .   7
   6.  Encapsulating PvDs in RAs . . . . . . . . . . . . . . . . . .   7
   7.  Acknowledgements  . . . . . . . . . . . . . . . . . . . . . .   7
   8.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .   7
   9.  Security Considerations . . . . . . . . . . . . . . . . . . .   7
   10. References  . . . . . . . . . . . . . . . . . . . . . . . . .   7
     10.1.  Normative References . . . . . . . . . . . . . . . . . .   7
     10.2.  Informative References . . . . . . . . . . . . . . . . .   8
   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .   9

1.  Introduction

   The purpose of this draft is to present experiences gained while
   trying to implement support for PVDs in the Linux operating system.
   Two prototype implementations were done as a part of this endeavor,
   one from scratch and another as a part of existing component
   (NetworkManager).  The implementations themselves are described in a
   separate document while this one is about topics independent from
   particular system, i.e. more in line with the networking
   standardization.








Gros, et al.              Expires May 26, 2016                  [Page 2]

Internet-Draft          Configuring PvD using NDP          November 2015


1.1.  Requirements Language

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in RFC 2119 [RFC2119].

2.  Options to configure hosts with PvDs

   When a router has multiple PvDs there are several options to send
   this information to hosts on a local network.  We'll group them into
   two orthogonal cases.  The first group are options for unsolicited
   RAs:

   o  Option A1.  In every RA router sends all known PvDs, implicit and
      explicit.

   o  Option A2.  In every RA router sends a subset of known PvDs,
      implicit and explicit.  Others are available upon request by
      hosts.

   o  Option A3.  Router sends RAs with a list of all PvD IDs it knows
      of.

   o  Option A4.  Router sends RAs with only implicit PvD and indication
      that it supports PvD.

   The second group are options when there is solicitation.  In this
   case the options are:

   o  Option B1.  When host sends RS it doesn't include any special
      options about PvD.  Router sends RA with all PvDs included.

   o  Option B2.  When host sends RS it includes an option that
      indicates host's support for PvDs.  Router sends RA with all PvDs
      included.  If the host doesn't include option to indicate PvD
      support, the router doesn't send any PvDs.

   o  Option B3.  When host sends RS it can include a list of PvD IDs
      and in that way requests information about specific PvD.  There
      could be a wildcard PvD ID that signals to router that every known
      PvD should be sent in the RA.

2.1.  Unsolicited RAs








Gros, et al.              Expires May 26, 2016                  [Page 3]

Internet-Draft          Configuring PvD using NDP          November 2015


2.1.1.  Sending all PvDs in every RA (A1)

   In this case router sends in each RA every PvD it knows of.

   When some PvD is removed the router sends RA without the PvD included
   and in that way signalizes that PvD isn't available anymore.  [TBD is
   this how RAs work].

   Pros of this case is simplicity of implementation.  No change in RS
   needed.

   Cons of this case is that RA message size might grow and make the
   system inefficient.  This can be particular problem in wireless
   networks where number of errors is high.

2.1.2.  Sending subset of PvDs in every RA (A2)

   In this case router sends in each RA only a certain subset of PvDs it
   knows of.  The client (in some way) knows that there are additional
   PvDs so it can ask for them by sending RS message.

   Pros of this case are that the RA message size can be controlled and
   the client immediatelly knows of (at least) some PvDs.

   Cons of this case is that there should be a way for router to revoke
   some PvDs.

2.1.3.  Sending implicit PvD with a list of PvD IDs (A3)

   In this case router sends in each RA implicit PvD, if it has one and
   a list of all (or subset) of PvD IDs it has.  Client needs to use RS
   with included PvD IDs to obtain configuration data for each PvD.

2.1.4.  Sending only implicit PvD (A4)

   In this case router sends in each RA only implicit PvD, if it has
   one.  It might somewhere (some flag) indicate the support for PvDs so
   that clients that receive RA know that they should request PvDs
   separately.

2.2.  Solicited RAs

   Note that in the case of hosts asking for specific PvDs routers that
   don't know for the given PvD ID will also receive requests!  This is
   due to RS being sent to All_Routers multicast address, and not to a
   specific router.





Gros, et al.              Expires May 26, 2016                  [Page 4]

Internet-Draft          Configuring PvD using NDP          November 2015


2.2.1.  RS without any change (B1)

   When host sends RS it doesn't include any special options about PvD.
   Router MUST send RA with all PvDs included as there is no way for
   client to request PvDs.

   This case fits well with the option A1 and option A2.  In case of the
   option A2 it incurrs one additional round-trip time!

2.2.2.  RS with indication of PvD support (B2)

   When host sends RS it includes an option that indicates host's
   support for PvDs.  Router sends RA with all PvDs included.  If the
   host doesn't include option to indicate PvD support, the router
   doesn't send any PvDs.

   When sending response the router has three options:

   o  Only PvDs are included in the response, no implicit PvD.

   o  Everything router knows, implicit and explicit PvDs, sends in a
      single response.

   o  Router sends implicit PvD and a list of known PvD IDs.

   Depending on the chosen RS, this case fits with options A1, A2 and
   A3.

2.2.3.  RS with request for specific PvDs (B3)

   When host sends RS it can include one or more PvD IDs and in that way
   requests information about specific PvD.  There could be a wildcard
   PvD ID that signals to router that every known PvD should be sent in
   the RA.

   When router sends PvDs in a separate RAs there are two options:

   o  Only requested PvD(s) is sent in the RA.  In case of wildcard PvD
      ID every known PvD ID to a router is sent.

   o  Only requested PvD(s) is sent in the RA.  In case of wildcard PvD
      ID subset of known PvD IDs to a router are sent.  Others must be
      requested explicitly.

   o  Along with requested PvD(s) included is also an implicit PvD.

   This case fits with options A1, A2 and A3.




Gros, et al.              Expires May 26, 2016                  [Page 5]

Internet-Draft          Configuring PvD using NDP          November 2015


   In case wildcard PvD ID is used option A4 is also possible.

3.  Implementation aspects

   While implementation aspects are system dependent, certain general
   characteristics could be discussed without going into specific
   implementations.  The question is should this be touched by
   standardization process?  Here we list some of the characteristics
   and possibilities, but leave the question of standardization open.

   In general, some kind of a control of PvD usage is necessary, i.e.
   it is necessary to be able to control which configuration parameters
   applications will use (e.g. source IP addresses, DNS servers,
   routes).  This can be achieved via two primary mechanisms:

      By isolating applications and providing them with only a subset of
      PvDs which application should use.  Note that the exact mechanism
      for isolation might vary, depending on the underlying system's
      abilities.  In case of Linux operating system the isolation can be
      achieved using the following mechanisms:



         Network namespaces.

         Virtual router function available since Linux kernel 4.4.

      Assigning all the configuration options at once and then using
      some mechanism to select certain subset based on the application
      or a thread.

      For example, in Fedora Linux this is partially done by
      NetworkManager which all the configuration options received via a
      single interface merges and assigns to the given interface.  It is
      written "partially" because there is no mechanism now that would
      allow control on which configuration parameters are used by
      applications.  Basically the mechanism exists in a form of IPv6
      source/destination address selection but this mechanism doesn't
      take into account some advanced features of PvDs like
      accessibility to a certain services.

   In the end, at least that was so in the prototype implementations,
   the combination of the two approaches was used, i.e. there was
   isolation but within each isolated environment several PvDs were
   merged together.

   The questions that are relevant for the standardization are:




Gros, et al.              Expires May 26, 2016                  [Page 6]

Internet-Draft          Configuring PvD using NDP          November 2015


4.  Sequence of steps to configure PvD on a host

   When PvDs are received by a node there are certain questions that
   should be thought of

4.1.  Implemented option

   TBD.

4.2.  Optimal case

   TBD.

5.  PvD characteristics description

   One very important question is how will clients know for what
   purposes the specific PvD is used for.  In this section we list
   possible options to achieve that.

6.  Encapsulating PvDs in RAs

7.  Acknowledgements

   TBW.

8.  IANA Considerations

   This memo includes no request to IANA.

   All drafts are required to have an IANA considerations section (see
   the update of RFC 2434 [I-D.narten-iana-considerations-rfc2434bis]
   for a guide).  If the draft does not require IANA to do anything, the
   section contains an explicit statement that this is the case (as
   above).  If there are no requirements for IANA, the section will be
   removed during conversion into an RFC by the RFC Editor.

9.  Security Considerations

   All drafts are required to have a security considerations section.
   See RFC 3552 [RFC3552] for a guide.

10.  References

10.1.  Normative References







Gros, et al.              Expires May 26, 2016                  [Page 7]

Internet-Draft          Configuring PvD using NDP          November 2015


   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <http://www.rfc-editor.org/info/rfc2119>.

   [RFC6418]  Blanchet, M. and P. Seite, "Multiple Interfaces and
              Provisioning Domains Problem Statement", RFC 6418,
              DOI 10.17487/RFC6418, November 2011,
              <http://www.rfc-editor.org/info/rfc6418>.

   [RFC6419]  Wasserman, M. and P. Seite, "Current Practices for
              Multiple-Interface Hosts", RFC 6419, DOI 10.17487/RFC6419,
              November 2011, <http://www.rfc-editor.org/info/rfc6419>.

   [RFC7556]  Anipko, D., Ed., "Multiple Provisioning Domain
              Architecture", RFC 7556, DOI 10.17487/RFC7556, June 2015,
              <http://www.rfc-editor.org/info/rfc7556>.

10.2.  Informative References

   [I-D.ietf-mif-mpvd-dhcp-support]
              Krishnan, S., Korhonen, J., and S. Bhandari, "Support for
              multiple provisioning domains in DHCPv6", draft-ietf-mif-
              mpvd-dhcp-support-02 (work in progress), October 2015.

   [I-D.ietf-mif-mpvd-ndp-support]
              Korhonen, J., Krishnan, S., and S. Gundavelli, "Support
              for multiple provisioning domains in IPv6 Neighbor
              Discovery Protocol", draft-ietf-mif-mpvd-ndp-support-03
              (work in progress), February 2016.

   [I-D.narten-iana-considerations-rfc2434bis]
              Narten, T. and H. Alvestrand, "Guidelines for Writing an
              IANA Considerations Section in RFCs", draft-narten-iana-
              considerations-rfc2434bis-09 (work in progress), March
              2008.

   [RFC2629]  Rose, M., "Writing I-Ds and RFCs using XML", RFC 2629,
              DOI 10.17487/RFC2629, June 1999,
              <http://www.rfc-editor.org/info/rfc2629>.

   [RFC3552]  Rescorla, E. and B. Korver, "Guidelines for Writing RFC
              Text on Security Considerations", BCP 72, RFC 3552,
              DOI 10.17487/RFC3552, July 2003,
              <http://www.rfc-editor.org/info/rfc3552>.






Gros, et al.              Expires May 26, 2016                  [Page 8]

Internet-Draft          Configuring PvD using NDP          November 2015


Authors' Addresses

   Stjepan Gros (editor)
   University of Zagreb
   Unska 3
   Zagreb  10000
   HR

   Email: stjepan.gros@fer.hr


   Leonardo Jelenkovic
   University of Zagreb
   Unska 3
   Zagreb  10000
   HR

   Email: leonardo.jelenkovic@fer.hr


   Dejan Skvorc
   University of Zagreb
   Unska 3
   Zagreb  10000
   HR

   Email: dejan.skvorc@fer.hr
























Gros, et al.              Expires May 26, 2016                  [Page 9]
